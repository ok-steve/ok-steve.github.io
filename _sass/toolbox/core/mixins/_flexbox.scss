// https://css-tricks.com/snippets/css/a-guide-to-flexbox/
// https://autoprefixer.github.io/, > 1%, last 2 versions
// https://github.com/philipwalton/flexbugs

// TODO improve mixins
// TODO find and add faillbacks

/**
 * Display
 */

@mixin display-flex($display: flex) {
  @if $display == flex {
    display:  -webkit-box;
    display: -webkit-flex;
    display:  -ms-flexbox;

    .lt-ie10 & {
      display: table;
    }
  } @else if $display == inline-flex {
    display:  -webkit-inline-box;
    display: -webkit-inline-flex;
    display:  -ms-inline-flexbox;

    .lt-ie10 & {
      display: inline-table;
    }
  } @else {
    @warn "Must be flex or inline-flex."
  }

  display: $display;

  .lt-ie10 & {
    > * {
      display: table-cell;
    }
  }
}


/**
 * Flex direction
 */

@mixin flex-direction($direction: row) {
  @if $direction == row {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
  } @else if $direction == row-reverse {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: reverse;

    .lt-ie10 & {
      direction: rtl;

      > * {
        direction: ltr;
      }
    }
  } @else if $direction == column {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;

    .lt-ie10 & {
      > * {
        width: 100%;
        display: table-row;
      }
    }
  } @else if $direction == column-reverse {
    -webkit-box-orient: vertical;
    -webkit-box-direction: reverse;

    .lt-ie10 & {
      > * {
        width: 100%;
        display: table-footer-group;
      }
    }
  } @else {
    @warn "row/column-(reverse)"
  }

  -webkit-flex-direction: $direction;
      -ms-flex-direction: $direction;
          flex-direction: $direction;
}


/**
 * Flex wrap
 */

@mixin flex-wrap($wrap: nowrap) {
  -webkit-flex-wrap: $wrap;
      -ms-flex-wrap: $wrap;
          flex-wrap: $wrap;

  .lt-ie10 & {
    // TODO .flex-wrap
  }
}



/**
 * Flex flow
 */

@mixin flex-flow($direction: row, $wrap: nowrap) {
  -webkit-flex-flow: $direction $wrap;
      -ms-flex-flow: $direction $wrap;
          flex-flow: $direction $wrap;

  .lt-ie10 & {
    // TODO .flex-flow
  }
}


/**
 * Justify content
 */

@mixin justify-content($justify: flex-start) {
  @if $justify == flex-start {
    -webkit-box-pack: start;
       -ms-flex-pack: start;
  } @else if $justify == flex-end {
    -webkit-box-pack: end;
       -ms-flex-pack: end;
  } @else if $justify == center {
    -webkit-box-pack: center;
       -ms-flex-pack: center;
  } @else if $justify == space-between {
    -webkit-box-pack: justify;
       -ms-flex-pack: justify;
  } @else if $justify == space-around {
    -webkit-box-pack: distribute;
       -ms-flex-pack: distribute;
  } @else {
    @warn "not in list"
  }

  -webkit-justify-content: $justify;
          justify-content: $justify;
}


/**
 * Align items
 */

@mixin align-items($align: stretch) {
  @if $align == flex-start {
    -webkit-box-align: start;
       -ms-flex-align: start;

    .lt-ie10 & {
      // TODO .align-items(flex-start)
    }
  } @else if $align == flex-end {
    -webkit-box-align: end;
       -ms-flex-align: end;

    .lt-ie10 & {
      > * {
        vertical-align: bottom;
      }
    }
  } @else if $align == center {
    -webkit-box-align: center;
       -ms-flex-align: center;

    .lt-ie10 & {
      > * {
        vertical-align: middle;
      }
    }
  } @else if $align == baseline {
    -webkit-box-align: baseline;
       -ms-flex-align: baseline;

    .lt-ie10 & {
  //    vertical-align: baseline; // default
    }
  } @else if $align == stretch {
    -webkit-box-align: stretch;
       -ms-flex-align: stretch;

    .lt-ie10 & {
      // TODO .align-items(stretch)
    }
  } @else {
    @warn "not in list";
  }

  -webkit-align-items: $align;
          align-items: $align;
}


/**
 * Align content
 */

@mixin align-content($align: stretch) {
  @if $align == flex-start {
    -ms-flex-line-pack: start;
  } @else if $align == flex-end {
    -ms-flex-line-pack: end;
  } @else if $align == center {
    -ms-flex-line-pack: center;
  } @else if $align == space-between {
    -ms-flex-line-pack: justify;
  } @else if $align == space-around {
    -ms-flex-line-pack: distribute;
  } @else if $align == stretch {
    -ms-flex-line-pack: stretch;
  }

  -webkit-align-content: $align;
          align-content: $align;

  .lt-ie10 & {
    // TODO .align-content
  }
}


/**
 * Order
 */

@mixin order($order) {
  -webkit-box-ordinal-group: $order + 1;
              -webkit-order: $order;
             -ms-flex-order: $order;
                      order: $order;

  .lt-ie10 & {
    // TODO .order
  }
}


/**
 * Flex grow
 */

@mixin flex-grow($grow: 0) {
   -webkit-box-flex: $grow;
  -webkit-flex-grow: $grow;
  -ms-flex-positive: $grow;
          flex-grow: $grow;

  .lt-ie10 & {
    // TODO .flex-grow
  }
}


/**
 * Flex shrink
 */

@mixin flex-shrink($shrink: 1) {
  -webkit-flex-shrink: $shrink;
    -ms-flex-negative: $shrink;
          flex-shrink: $shrink;

  .lt-ie10 & {
    // TODO .flex-shrink
  }
}


/**
 * Flex basis
 */

@mixin flex-basis($basis: auto) {
       -webkit-flex-basis: $basis;
  -ms-flex-preferred-size: $basis;
               flex-basis: $basis;

  .lt-ie10 & {
    width: $basis;
  }
}


/**
 * Flex
 */

@mixin flex($flex: 0 1 auto) {
  // flex: 1, 25%
  -webkit-box-flex: $flex;
  // flex: auto
  -webkit-box-flex: 1;
  // flex: 0 1 auto (or any multiple value)
  -webkit-box-flex: nth($flex, 1);

      -webkit-flex: $flex;
          -ms-flex: $flex;
              flex: $flex;

  .lt-ie10 & {
    // TODO .flex
  }
}


/**
 * Align self
 */

@mixin align-self($align) {
  @if $align == flex-start {
    .lt-ie10 & {
      // TODO .align-self(flex-start)
    }
  } @else if $align == flex-end {
    .lt-ie10 & {
      vertical-align: bottom;
    }
  } @else if $align == center {
    .lt-ie10 & {
      vertical-align: center;
    }
  } @else if $align == baseline {
    .lt-ie10 & {
//      vertcal-align: baseline; // default
    }
  } @else if $align == stretch {
    .lt-ie10 & {
      // TODO .align-self(stretch)
    }
  }

   -webkit-align-self: $align;
  -ms-flex-item-align: $align;
           align-self: $align;
}
