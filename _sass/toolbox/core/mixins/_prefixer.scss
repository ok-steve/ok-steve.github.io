/* =========================================================================
   Prefixer
   ========================================================================= */


// https://autoprefixer.github.io/, > 1%, last 2 versions, IE > 10

/*------------------------------------*\
    #ANIMATIONS
\*------------------------------------*/


@mixin animation($animation) {
  -webkit-animation: $animation;
          animation: $animation;
}

@mixin animation-name($name) {
  -webkit-animation-name: $name;
          animation-name: $name;
}

@mixin animation-duration($duration) {
  -webkit-animation-duration: $duration;
          animation-duration: $duration;
}

@mixin animation-direction($direction) {
  -webkit-animation-direction: $direction;
          animation-direction: $direction;
}

@mixin animation-fill-mode($fill-mode) {
  -webkit-animation-fill-mode: $fill-mode;
          animation-fill-mode: $fill-mode;
}






/*------------------------------------*\
    #FLEXBOX
\*------------------------------------*/


// https://css-tricks.com/snippets/css/a-guide-to-flexbox/
// https://github.com/philipwalton/flexbugs

/**
 * Display
 */

@mixin display-flex($display: flex) {
  @if $display == flex {
    display:  -webkit-box;
    display: -webkit-flex;
    display:  -ms-flexbox;
  } @else if $display == inline-flex {
    display:  -webkit-inline-box;
    display: -webkit-inline-flex;
    display:  -ms-inline-flexbox;
  } @else {
    @warn "Must be `flex` or `inline-flex`."
  }

  display: $display;
}


/**
 * Flex direction
 */

@mixin flex-direction($direction: row) {
  @if $direction == row {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
  } @else if $direction == row-reverse {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: reverse;
  } @else if $direction == column {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
  } @else if $direction == column-reverse {
    -webkit-box-orient: vertical;
    -webkit-box-direction: reverse;
  } @else {
    @warn "row/column-(reverse)"
  }

  -webkit-flex-direction: $direction;
      -ms-flex-direction: $direction;
          flex-direction: $direction;
}


/**
 * Flex wrap
 */

@mixin flex-wrap($wrap: nowrap) {
  -webkit-flex-wrap: $wrap;
      -ms-flex-wrap: $wrap;
          flex-wrap: $wrap;
}


/**
 * Flex flow
 */

@mixin flex-flow($direction: row, $wrap: nowrap) {
  -webkit-flex-flow: $direction $wrap;
      -ms-flex-flow: $direction $wrap;
          flex-flow: $direction $wrap;
}


/**
 * Justify content
 */

@mixin justify-content($justify: flex-start) {
  @if $justify == flex-start {
    -webkit-box-pack: start;
       -ms-flex-pack: start;
  } @else if $justify == flex-end {
    -webkit-box-pack: end;
       -ms-flex-pack: end;
  } @else if $justify == center {
    -webkit-box-pack: center;
       -ms-flex-pack: center;
  } @else if $justify == space-between {
    -webkit-box-pack: justify;
       -ms-flex-pack: justify;
  } @else if $justify == space-around {
    -webkit-box-pack: distribute;
       -ms-flex-pack: distribute;
  } @else {
    @warn "not in list"
  }

  -webkit-justify-content: $justify;
          justify-content: $justify;
}


/**
 * Align items
 */

@mixin align-items($align: stretch) {
  @if $align == flex-start {
    -webkit-box-align: start;
       -ms-flex-align: start;
  } @else if $align == flex-end {
    -webkit-box-align: end;
       -ms-flex-align: end;
  } @else if $align == center {
    -webkit-box-align: center;
       -ms-flex-align: center;
  } @else if $align == baseline {
    -webkit-box-align: baseline;
       -ms-flex-align: baseline;
  } @else if $align == stretch {
    -webkit-box-align: stretch;
       -ms-flex-align: stretch;
  } @else {
    @warn "not in list";
  }

  -webkit-align-items: $align;
          align-items: $align;
}


/**
 * Align content
 */

@mixin align-content($align: stretch) {
  @if $align == flex-start {
    -ms-flex-line-pack: start;
  } @else if $align == flex-end {
    -ms-flex-line-pack: end;
  } @else if $align == center {
    -ms-flex-line-pack: center;
  } @else if $align == space-between {
    -ms-flex-line-pack: justify;
  } @else if $align == space-around {
    -ms-flex-line-pack: distribute;
  } @else if $align == stretch {
    -ms-flex-line-pack: stretch;
  }

  -webkit-align-content: $align;
          align-content: $align;
}


/**
 * Order
 */

@mixin order($order) {
  -webkit-box-ordinal-group: $order + 1;
              -webkit-order: $order;
             -ms-flex-order: $order;
                      order: $order;
}


/**
 * Flex grow
 */

@mixin flex-grow($grow: 0) {
  // NOTE numbers must be positive
   -webkit-box-flex: $grow;
  -webkit-flex-grow: $grow;
  -ms-flex-positive: $grow;
          flex-grow: $grow;
}


/**
 * Flex shrink
 */

@mixin flex-shrink($shrink: 1) {
  // NOTE numbers must be positive
  -webkit-flex-shrink: $shrink;
    -ms-flex-negative: $shrink;
          flex-shrink: $shrink;
}


/**
 * Flex basis
 */

@mixin flex-basis($basis: auto) {
       -webkit-flex-basis: $basis;
  -ms-flex-preferred-size: $basis;
               flex-basis: $basis;
}


/**
 * Flex
 */

@mixin flex($flex: 0 1 auto) {
  @if $flex == auto {
    -webkit-box-flex: 1;
  } @else {
    -webkit-box-flex: nth($flex, 1);
  }

  -webkit-flex: $flex;
      -ms-flex: $flex;
          flex: $flex;
}


/**
 * Align self
 */

@mixin align-self($align: auto) {
  @if $align == auto {
    -ms-flex-item-align: auto;
  } @else if $align == flex-start {
    -ms-flex-item-align: start;
  } @else if $align == flex-end {
    -ms-flex-item-align: end;
  } @else if $align == center {
    -ms-flex-item-align: center;
  } @else if $align == baseline {
    -ms-flex-item-align: baseline;
  } @else if $align == stretch {
    -ms-flex-item-align: stretch;
  }

  -webkit-align-self: $align;
          align-self: $align;
}





/*------------------------------------*\
    #HYPHENS
\*------------------------------------*/


@mixin hyphens($mode) {
  -webkit-hyphens: $mode;
     -moz-hyphens: $mode;
      -ms-hyphens: $mode;
          hyphens: $mode;
}





/*------------------------------------*\
    #KEYFRAMES
\*------------------------------------*/


@mixin keyframes($name) {
  @-webkit-keyframes $name {
    @content;
  }

  @keyframes $name {
    @content;
  }
}





/*------------------------------------*\
    #SELECTION
\*------------------------------------*/


@mixin selection {
  ::-moz-selection {
    @content;
  }

  ::selection {
    @content;
  }
}





/*------------------------------------*\
    #TRANSFORMS
\*------------------------------------*/


@mixin transform($transform) {
  -webkit-transform: $transform;
          transform: $transform;
}





/*------------------------------------*\
    #TRANSITIONS
\*------------------------------------*/


@mixin transition($transition) {
  -webkit-transition: $transition;
          transition: $transition;
}

@mixin transition-timing-function($timing-function) {
  -webkit-transition-timing-function: $timing-function;
          transition-timing-function: $timing-function;
}
